{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/about/my-card/my-card.component.ts","webpack:///src/app/about/my-card/my-card.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/contact/contact.component.ts","webpack:///src/app/contact/contact.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/project/project.component.ts","webpack:///src/app/home/project/project.component.html","webpack:///src/app/resume/resume.component.ts","webpack:///src/app/resume/resume.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","icons","name","color","selector","templateUrl","styleUrls","MyCardComponent","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","breakpointObserver","title","mobile","observe","HandsetPortrait","AppModule","declarations","providers","bootstrap","ContactComponent","_http","fb","validationMsgs","formErrors","contactForm","group","firstName","required","email","message","formDirective","console","log","controls","Object","forEach","key","abstractControl","get","valid","errorType","errors","filter","sending","post","value","subscribe","res","displaySent","username","reset","resetForm","error","displayError","formControl","first","invalid","touched","focused","formValidation","FooterComponent","HomeComponent","projects","desc","icon","codeURL","appURL","ProjectComponent","ResumeComponent","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  icons: any[] = [\n    {\n      name: \"HTML5\",\n      class: \"fab fa-html5\",\n      color: \"#e34f26\",\n    },\n    {\n      name: \"CSS3\",\n      class: \"fab fa-css3-alt\",\n      color: \"#214ce5\",\n    },\n    {\n      name: \"JS\",\n      class: \"fab fa-js-square\",\n      color: \"#f0d43d\",\n    },\n    {\n      name: \"Angular\",\n      class: \"fab fa-angular\",\n      color: \"#dd1b16\",\n    },\n    {\n      name: \"Node.js\",\n      class: \"fab fa-node\",\n      color: \"#25bc61\",\n    },\n  ]\n\n}\n","<div>\n    <h1>About</h1>\n    <app-my-card></app-my-card>\n    <div class=\"about-me\">\n        <h2>A Little About Me</h2>\n        <p> \n            I am a passionate web developer eager to learn new skills and make a positive impact. With knowledge \n            in HTML, CSS, and JavaScript as well as the Angular framework, node.js runtime, SQL and Git/GitHub \n            for version control/collaboration, I have crafted many user friendly web applications both individually \n            and with teammates. I am always excited to challenge myself and develop new skills and am constantly \n            learning to be the best developer I can be!\n        </p>\n    </div>\n\n    <div class=\"icons\">\n        <ng-container *ngFor=\"let icon of icons\">\n            <div class=\"icon\">\n                <p>{{ icon.name }}</p>\n                <i [class]=\"icon.class\" [ngStyle]=\"{color: icon.color}\"></i>\n            </div>\n        </ng-container>\n    </div>\n    <div class=\"about-me\">\n        <h2>My Story</h2>\n        <p> \n            It is an incredible thing when passions and talents align. I navigated my way down a unique professional \n            path before discovering that alignment for myself in coding. My studies in college were focused on the \n            pursuance of a career in physical therapy. After 2 years working in a clinic, I had developed strong \n            interpersonal and critical thinking skills, but was ultimately faced with the decision of getting a \n            doctorates in physical therapy or changing careers. The craft beer industry was booming and I had \n            extensive knowledge of the brewing process as a result of my love of home brewing. I got a job at the \n            largest brewery in Michigan helping in the production of their barrel aged beers. I love learning, so \n            during some time off, I decided to type three words into the google search bar that would change my life,\n            “How to Code”.\n        </p>\n        <p>\n            For the next several months I was spending nearly all my free time on Codecademy, Freecodecamp, Udemy, \n            Pleuralsight and anywhere I could learn more HTML, CSS and JavaScript. I was hooked. I love problem solving \n            so the process of figuring out how to do what I need to do, and making it work, I find so satisfying! Pairing \n            that with the potential of programming to create positive change in the lives of so many people all over the \n            world and changing careers was a no brainer. It was the alignment of talent and passion for which I had been \n            looking.\n        </p>\n        <p>\n            I wanted to create a solid foundation of knowledge for myself in preparation for this career change and decided \n            going to school would be the best way to learn the skills necessary to be successful in software development. \n            My time at Grand Circus's Front-End After-Hours Bootcamp has only motivated me further to continue learning new \n            skills. And although my time at Grand Circus has just come to a close, I’m so excited for the journey that is just \n            beginning.\n        </p>    \n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-card',\n  templateUrl: './my-card.component.html',\n  styleUrls: ['./my-card.component.css']\n})\nexport class MyCardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main\">\n    <img src=\"assets/img/Me.jpg\" alt=\"Bryce Byker Profile Picture\">\n    <div class=\"info\">\n        <p>Hello, my name is</p>\n        <h1>BRYCE BYKER</h1>\n        <h3>Web Developer</h3>\n        <p class=\"info-item\"><mat-icon fontSet=\"material-icons-outlined\">local_phone</mat-icon>(616) 889-3896</p>\n        <p class=\"info-item\"><mat-icon fontSet=\"material-icons-outlined\">mail</mat-icon> bryce1492@gmail.com</p>\n        <p class=\"info-item\"><mat-icon fontSet=\"material-icons-outlined\">home</mat-icon> Grand Rapids, MI</p>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component'\nimport { AboutComponent } from './about/about.component'\nimport { ResumeComponent } from './resume/resume.component'\nimport { ContactComponent } from './contact/contact.component'\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'home', component: HomeComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'resume', component: ResumeComponent },\n  { path: 'contact', component: ContactComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout'\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'portfolio';\n  opened: any; \n  mobile: Observable<BreakpointState> = this.breakpointObserver.observe(Breakpoints.HandsetPortrait)\n\n  constructor(private breakpointObserver: BreakpointObserver) { }\n\n}\n","\n<nav>\n  <h1 routerLink=\"/home\">Bryce Byker</h1>\n  <div *ngIf=\"!(mobile | async).matches\">\n    <ul>\n      <a routerLink=\"/home\" routerLinkActive=\"active\">Home</a>\n      <a routerLink=\"/about\" routerLinkActive=\"active\">About</a>\n      <a routerLink=\"/resume\" routerLinkActive=\"active\">Resume</a>\n      <a routerLink=\"/contact\" routerLinkActive=\"active\">Contact</a>\n    </ul>  \n  </div>\n  <div *ngIf=\"(mobile | async).matches\" class='menu-container'>\n    <mat-icon (click)=\"sidenav.toggle()\">menu</mat-icon>\n  </div>\n</nav>\n<mat-sidenav-container>\n  <mat-sidenav #sidenav mode=\"over\" [(opened)]=\"opened\" position='end' class=\"sidenav\">\n    <h2>Menu</h2>\n    <ul class=\"side-bar-list\">\n      <a routerLink=\"/home\" routerLinkActive=\"active\">Home</a>\n      <a routerLink=\"/about\" routerLinkActive=\"active\">About</a>\n      <a routerLink=\"/resume\" routerLinkActive=\"active\">Resume</a>\n      <a routerLink=\"/contact\" routerLinkActive=\"active\">Contact</a>\n    </ul>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n\n\n<app-footer></app-footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { ResumeComponent } from './resume/resume.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { ProjectComponent } from './home/project/project.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { MyCardComponent } from './about/my-card/my-card.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { HttpClientModule } from '@angular/common/http'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { LayoutModule } from '@angular/cdk/layout';\n\nimport { MatIconModule, } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatInputModule } from '@angular/material/input'\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AboutComponent,\n    ResumeComponent,\n    ContactComponent,\n    ProjectComponent,\n    FooterComponent,\n    MyCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatFormFieldModule,\n    MatInputModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormGroupDirective, AbstractControl } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { MatInput } from '@angular/material/input';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  contactForm: FormGroup\n  sending: boolean;\n  displaySent: boolean;\n  displayError: boolean;\n  username: string\n\n  constructor(private _http: HttpClient, private fb: FormBuilder) { }\n\n  validationMsgs = {\n    'firstName': {\n      'required': 'First Name is required'\n    },\n    'email': {\n      'required': 'E-mail is required',\n      'email': 'Must be a valid email address'\n    },\n    'message': {\n      'required': 'Please include the message you wish to send'\n    }\n  }\n\n  formErrors = {\n    'firstName': '',\n    'email': '',\n    'message': ''\n  }\n\n\n  ngOnInit(): void {\n    this.contactForm = this.fb.group({\n      firstName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      message: ['', Validators.required]\n    })\n  }\n\n  formValidation(group: FormGroup, formDirective: FormGroupDirective) {\n    console.log(group.controls);\n    Object.keys(group.controls).forEach(key => {\n      const abstractControl = group.get(key)\n      this.formErrors[key] = ''\n      if (!abstractControl.valid) {\n        const errorType = Object.keys(abstractControl.errors)[0]\n        this.formErrors[key] = this.validationMsgs[key][errorType]\n      }\n    });\n\n    const errors = Object.keys(this.formErrors).filter( key => this.formErrors[key])\n    if (!errors[0]) {\n      this.sending = true;\n      return this._http.post('/send', this.contactForm.value).subscribe( \n        res => {\n          this.sending = false;\n          this.displaySent = true;\n          this.username = this.contactForm.value.firstName;\n          this.contactForm.reset();\n          formDirective.resetForm();\n      }, \n        error => {\n          this.sending = false;\n          this.displayError = true;\n          this.username = this.contactForm.value.firstName;\n          this.contactForm.reset();\n          formDirective.resetForm();\n          console.log(error);\n        }\n      )\n    }\n  }\n\n  getColor(formControl: AbstractControl, first: MatInput) {\n    if (formControl.invalid && formControl.touched) {\n      return 'warn'\n    }\n    if (first.focused) {\n      return 'primary'\n    } \n    return '#AAA'\n  }\n\n  /* \n  To Do:\n \n    1. Get front end talking to back end\n    2. Set up email\n    3. Test \n    4. Deploy\n  */\n\n}\n","<h1>Contact</h1>\n\n<div class=\"form-container\">\n    <form \n        class=\"inner-container\" \n        #formDirective='ngForm' \n        [formGroup]=\"contactForm\" \n        (ngSubmit)='formValidation(contactForm, formDirective)'>\n        <div *ngIf=\"displaySent\" class=\"status-msg\">\n           <h3>Thank You {{ username }}!</h3>\n           <p>Your message has been sent!</p>\n        </div>\n        <div *ngIf=\"displayError\" class=\"status-msg\">\n            <h3>Sorry {{ username }}!</h3>\n            <p>\n                There seems to have been an error processing the request. Please \n                feel free to reach out to me using any of the contact/social \n                information listed in the footer at the bottom of the page. \n                Thank you!\n            </p>\n        </div>\n\n        <div class=\"form-el\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>First Name *</mat-label>\n                <input \n                    matInput \n                    formControlName=\"firstName\" \n                    #first='matInput' \n                    name=\"firstName\" \n                    id=\"firstName\" \n                    type=\"text\">\n                <mat-icon \n                    matSuffix \n                    [color]=\"getColor(contactForm.controls.firstName, first)\">\n                    person\n                </mat-icon>\n                <mat-error *ngIf=\"formErrors['firstName']\">\n                    {{ formErrors['firstName'] }}\n                </mat-error>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form-el\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Last Name</mat-label>\n                <input matInput name=\"lastName\" id=\"lastName\" type=\"text\">  \n                <mat-icon matSuffix>person</mat-icon>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form-el\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Company</mat-label>\n                <input matInput name=\"company\" id=\"company\" type=\"text\">\n                <mat-icon matSuffix>work_outline</mat-icon>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form-el\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>E-mail *</mat-label>\n                <input \n                    matInput \n                    formControlName=\"email\" \n                    #email='matInput' \n                    name=\"email\" \n                    id=\"email\" \n                    type=\"text\">\n                <mat-icon \n                    matSuffix \n                    [color]=\"getColor(contactForm.controls.email, email)\">\n                    mail_outline\n                </mat-icon>\n                <mat-error *ngIf=\"formErrors['email']\">\n                    {{ formErrors['email'] }}\n                </mat-error>\n            </mat-form-field>\n        </div>\n\n        <div class=\"form-el\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Message *</mat-label>\n                <textarea \n                    matInput \n                    formControlName=\"message\" \n                    name=\"comment\" \n                    id=\"comment\" \n                    cols=\"30\" \n                    rows=\"10\">\n                </textarea>\n                <mat-error *ngIf=\"formErrors['message']\">\n                    {{ formErrors['message'] }}\n                </mat-error>\n            </mat-form-field>\n            \n        </div>\n\n        <button type=\"submit\"> {{ sending ? \"Sending...\" : \"Submit\" }}</button>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n    <div class=\"footer-container\">\n      <ul>\n        <a routerLink=\"/home\" routerLinkActive=\"active\">Home</a>\n        <a routerLink=\"/about\" routerLinkActive=\"active\">About</a>\n        <a routerLink=\"/resume\" routerLinkActive=\"active\">Resume</a>\n        <a routerLink=\"/contact\" routerLinkActive=\"active\">Contact</a>\n      </ul>\n      <div>\n          <h2>Contact</h2>\n          <div class=\"contact-info\">\n            <p>Bryce Byker</p>\n            <p>616-889-3896</p>\n            <p>bryce1492@gmail.com</p>\n          </div>\n      </div>\n      <div class=\"social-links-container\">\n        <h2 >Social</h2>\n        <div class=\"social-links\">\n          <div class=\"LI-profile-badge\"  data-version=\"v1\" data-size=\"medium\" data-locale=\"en_US\" data-type=\"horizontal\" data-theme=\"dark\" data-vanity=\"bryce-byker\"><a class=\"LI-simple-link\" href='https://www.linkedin.com/in/bryce-byker?trk=profile-badge'>Bryce Byker</a></div>\n          <p class=\"plus\">+</p>\n          <img class=\"github-logo\" src=\"assets/img/GitHub-logo.png\" alt=\"\">  \n        </div>  \n      </div>  \n    </div>\n    <p class=\"design\">Design by Bryce Byker</p>\n  </footer>\n","import { Component, OnInit } from '@angular/core';\nimport { IProject } from '../project.interface'\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  projects: IProject[] = [\n    {\n      title: \"GReen\",\n      desc: \"Using Angular 9 & Google Maps with Refuse & Recycle data from the City of Grand Rapids, GReen is a responsive web app that makes recycling easy. The user can find their next pickup date with the click of a button, find what can & can't be recycled in their bin, locate nearby recycle centers & connect with city resources.\",\n      icon: \"public\",\n      codeURL: \"https://github.com/Bykerbry/GReen\",\n      appURL: \"https://bykerbry.github.io/GReen/\"\n    },\n    {\n      title: \"Budget Buddy\",\n      desc: \"Using vanilla JavaScript, HTML & CSS, my team & I built a budgeting app. The app is mobile & desktop responsive and git was used for collaboration. A clean & simple user interface walks the user through entering their income & expenses, breaks down the numbers into a weekly budget and generates an expense report.\",\n      icon: \"account_balance\",\n      codeURL: \"https://github.com/ottokeres/Budget-Buddy/\",\n      appURL: \"https://bykerbry.github.io/Budget-Buddy/\"\n    },\n    {\n      title: \"Recipe Search\",\n      desc: \"Using git to collaborate, my team & I built a web app in Angular 8 that utilizes Edamam's Recipe Search API. We made use of Angular Material for many of the inputs, buttons, icons & dialogs. The user can simply enter a search, apply any dietary restrictions they wish, then see their results neatly displayed. Favorites can also be added and viewed on the favorites page.\",\n      icon: \"restaurant\",\n      codeURL: \"https://github.com/Bykerbry/recipe-api-project\",\n      appURL: \"https://bykerbry.github.io/recipe-api-project/\"\n    }\n  ]\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"img-container\">\n    <div class=\"img-overlay\">\n        <h2 class=\"front-end\">Front-End</h2>\n        <h1 class=\"web-dev\">Web Developer</h1>\n    </div>\n    <img src=\"assets/img/code-screen-4.jpg\" alt=\"\">\n</div>\n\n<h1 class=\"projects-h1\">Projects</h1>\n<div class=\"projects-container\">\n    <app-project *ngFor=\"let project of projects\" [project]=\"project\"></app-project>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { IProject } from 'src/app/project.interface';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})\nexport class ProjectComponent implements OnInit {\n\n  @Input() project: IProject\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"project-container\">\n    <h3>{{ project.title }}</h3>\n    <div class=\"icon-container\">\n        <mat-icon>{{project.icon}}</mat-icon>\n    </div>\n    <p>{{ project.desc }}</p>\n    <div class=\"btn-container\">\n        <a target='_blank' [href]=\"project.codeURL\">See Code</a>\n        <a target='_blank' [href]=\"project.appURL\">See App</a>   \n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-resume',\n  templateUrl: './resume.component.html',\n  styleUrls: ['./resume.component.css']\n})\nexport class ResumeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Resume</h1>\n<div class=\"container\">\n    <iframe src=\"assets/img/PortfolioResume.pdf\"></iframe>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}